<controls:MetroWindow x:Class="AquaLightControl.Gui.Views.Windows.MainWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                      xmlns:converters="clr-namespace:AquaLightControl.Gui.Converters" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:dialogs="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
                      xmlns:usercontrols="clr-namespace:AquaLightControl.Gui.Views.Controls"
                      xmlns:windows="clr-namespace:AquaLightControl.Gui.ViewModels.Windows"
                      mc:Ignorable="d"
                      Title="MainWindow" Height="453" Width="800">

    <Window.Resources>
        <ResourceDictionary>
            <dialogs:SimpleDialog x:Key="LedDeviceDialog" Title="LED hinzufügen">
                <usercontrols:LedDeviceControl />
            </dialogs:SimpleDialog>
        </ResourceDictionary>
    </Window.Resources>
    
    <Window.DataContext>
        <windows:MainWindowViewModel/>
    </Window.DataContext>
    
    <Grid>
        <Grid.Resources>
            <converters:EnumVisibilityConverter x:Key="ConnectionStateVisibilityConverter" />
        </Grid.Resources>
        <controls:MetroContentControl>
            <TabControl>
                <TabItem Header="Server">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBox Grid.Row="0"
                                 Grid.Column="0"
                                 Margin="5"
                                 Text="{Binding BaseUrl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 controls:TextboxHelper.Watermark="Serveradresse hier eingeben"
                                 controls:TextboxHelper.ClearTextButton="True" />

                        <Button Grid.Row="1"
                                Grid.Column="0"
                                Width="200"
                                Margin="5,10"
                                Command="{Binding Path=CheckConnectionStateCommand}"
                                HorizontalAlignment="Right"
                                Style="{StaticResource AccentedSquareButtonStyle}">
                            <TextBlock>Verbindung aufbauen</TextBlock>
                        </Button>

                        <TextBlock Grid.Row="3"
                                   Grid.Column="0"
                                   Background="DarkRed"
                                   Foreground="White"
                                   TextAlignment="Center"
                                   Height="25"
                                   Text="Verbindung fehlgeschlagen"
                                   Visibility="{Binding Path=ConnectionState, Converter={StaticResource ConnectionStateVisibilityConverter}, ConverterParameter=Failed}" />
                        <TextBlock Grid.Row="3"
                                   Grid.Column="0"
                                   Background="DarkOliveGreen"
                                   Foreground="White"
                                   TextAlignment="Center"
                                   Height="25"
                                   Text="Verbindung erfolgreich"
                                   Visibility="{Binding Path=ConnectionState, Converter={StaticResource ConnectionStateVisibilityConverter}, ConverterParameter=Success}" />
                    </Grid>
                </TabItem>
                <TabItem Header="LED-Streifen">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <DataGrid Grid.Row="0"
                                  Grid.Column="0"
                                  Margin="5"
                                  ItemsSource="{Binding Path=LedDevices}"
                                  SelectedItem="{Binding Path=SelectedLedDevice}"
                                  AutoGenerateColumns="False"
                                  Style="{StaticResource AzureDataGrid}"
                                  CanUserSortColumns="True"
                                  CanUserReorderColumns="False"
                                  SelectionMode="Single">
                            <DataGrid.Columns>
                                <DataGridTemplateColumn Header="Farbe" Width="60" IsReadOnly="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Width="20" Background="{Binding Path=Color}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="Name" Width="300" IsReadOnly="True" CanUserSort="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=Name}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="Gerätenummer" Width="120" IsReadOnly="True" CanUserSort="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=DeviceNumber}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="Kanal" Width="120" IsReadOnly="True" CanUserSort="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=Channel}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>

                        <StackPanel Grid.Row="1" Grid.Column="0" Orientation="Horizontal">
                            <Button Command="{Binding Path=LedDeviceNewCommand}"
                                    Margin="0,5" Width="50" Height="50" Style="{DynamicResource MetroCircleButtonStyle}">
                                <Rectangle Width="20" Height="20" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_add}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </Button>

                            <Button
                                Command="{Binding Path=LedDeviceEditCommand}"
                                Margin="0,5" Width="50" Height="50" Style="{DynamicResource MetroCircleButtonStyle}">
                                <Rectangle Width="20" Height="20" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_edit}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </Button>

                            <Button
                                Command="{Binding Path=RefreshCommand}"
                                Margin="0,5,0,0" Width="50" Height="50" Style="{DynamicResource MetroCircleButtonStyle}">

                                <Rectangle Width="20" Height="20" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_refresh}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </Button>

                        </StackPanel>
                    </Grid>
                </TabItem>
                <TabItem Header="Lichtzeiten">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <usercontrols:LineDrawControl 
                            DataContext="{Binding Path=LightConfigurationViewModel}"
                            Grid.Row="1" 
                            Grid.Column="0" 
                                                      />
                        <Grid Grid.Row="2" Grid.Column="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <Button
                                Grid.Column="0"
                                Grid.Row="0"
                                Command="{Binding Path=RefreshCommand}"
                                Margin="0,5,0,0" Width="50" Height="50" Style="{DynamicResource MetroCircleButtonStyle}">

                                <Rectangle Width="20" Height="20" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_refresh}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </Button>

                            <ToggleButton
                                Name="BtnSingleLine"
                                IsChecked="{Binding Path=ShowOnlySelectedDevice, Mode=TwoWay}"
                                Grid.Column="1"
                                Grid.Row="0"
                                Margin="0,5,0,0" Width="50" Height="50"
                                Style="{DynamicResource MetroCircleToggleButtonStyle}">
                                <Rectangle Width="20"
                                           Height="20"
                                           Fill="{DynamicResource BlackBrush}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Fill"
                                                     Visual="{DynamicResource appbar_graph_line}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </ToggleButton>

                            <controls:SplitButton
                                IsEnabled="{Binding IsChecked, ElementName=BtnSingleLine}"
                                Grid.Column="2"
                                Grid.Row="0"
                                Margin="5,10,5,10"
                                ItemsSource="{Binding Path=LedDevices}"
                                SelectedItem="{Binding Path=SelectedLedDevice, Mode=TwoWay}">
                                <controls:SplitButton.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                            <TextBlock Margin="0,5" Width="20" Background="{Binding Path=Color}" VerticalAlignment="Center" />
                                            <TextBlock Margin="10,5,0,0" Text="{Binding Path=Name}" VerticalAlignment="Center" />
                                        </StackPanel>
                                    </DataTemplate>
                                </controls:SplitButton.ItemTemplate>

                            </controls:SplitButton>
                           
                            <Button
                                IsEnabled="{Binding Path=LightConfigurationHasBeenModified}"
                                Grid.Column="4"
                                Grid.Row="0"
                                Width="90"
                                Margin="5,10"
                                HorizontalAlignment="Right"
                                Style="{StaticResource AccentedSquareButtonStyle}">
                                <TextBlock>Speichern</TextBlock>
                            </Button>
                        </Grid>

                    </Grid>
                </TabItem>
                <TabItem Header="LED-Test">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <controls:ToggleSwitch
                            Name="TestMode"
                            Margin="5,10,5,10"
                            Grid.Row="0"
                            Grid.Column="0"
                            HorizontalAlignment="Right"
                            IsChecked="{Binding Path=TestMode}">Testmodus</controls:ToggleSwitch>

                        <controls:SplitButton
                            IsEnabled="{Binding IsChecked, ElementName=TestMode}"
                            Grid.Row="0"
                            Grid.Column="1"
                            Margin="5,10,5,10"
                            ItemsSource="{Binding Path=LedDevices}"
                            SelectedItem="{Binding Path=SelectedPwmDevice, Mode=TwoWay}">
                            <controls:SplitButton.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                        <TextBlock Margin="0,5" Width="20" Background="{Binding Path=Color}" VerticalAlignment="Center" />
                                        <TextBlock Margin="10,5,0,0" Text="{Binding Path=Name}" VerticalAlignment="Center" />
                                    </StackPanel>
                                </DataTemplate>
                            </controls:SplitButton.ItemTemplate>

                        </controls:SplitButton>

                        <Button
                            IsEnabled="{Binding IsChecked, ElementName=TestMode}"
                            Grid.Row="0"
                            Grid.Column="2"
                            Command="{Binding Path=RefreshCommand}"
                            Margin="0,5,0,0" Width="50" Height="50" Style="{DynamicResource MetroCircleButtonStyle}">

                            <Rectangle Width="20" Height="20" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_refresh}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Button>

                        <controls:NumericUpDown
                            Margin="5"
                            Grid.Row="1"
                            Grid.Column="0" 
                            Minimum="{Binding Minimum, ElementName=PwmSlider}"
                            Maximum="{Binding Maximum, ElementName=PwmSlider}"
                            Value="{Binding Path=SelectedLedDevicePwmValue, Mode=TwoWay}"
                            />
                        
                        <Slider 
                            Name ="PwmSlider"
                            Margin="5"
                                Grid.Row="1"
                                Grid.Column="1"
                                Minimum="0"
                                Maximum="65535"

                                Value="{Binding Path=SelectedLedDevicePwmValue}"
                                IsEnabled="{Binding IsChecked, ElementName=TestMode}" />
                    </Grid>
                </TabItem>
            </TabControl>
        </controls:MetroContentControl>
    </Grid>
</controls:MetroWindow>